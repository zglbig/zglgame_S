<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zgl.dao.mapper.IDBPlayerMapper">
    <resultMap id="playerMap" type="org.zgl.dao.entity.DBPlayer">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="user_name" property="userName"/>
        <result column="head_icon" property="headIcon"/>
        <result column="weath" property="weath"/>
        <result column="task" property="task"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
    </resultMap>
    <insert id="insertDBPlayer" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into db_player(account,password,user_name,head_icon,weath,task,create_time,last_edit_time)
       values (#{account},#{password},#{userName},#{headIcon},#{weath},#{task},#{createTime},#{lastEditTime});
    </insert>
    <update id="updateDBPlayer" parameterType="org.zgl.dao.entity.DBPlayer">
        update db_player
        <set>
            <if test="uid != null">uid = #{uid},</if>
            <if test="account != null">account = #{account},</if>
            <if test="password != null">password = #{password},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="headIcon != null">head_icon = #{headIcon},</if>
            <if test="weath != null">weath = #{weath},</if>
            <if test="task != null">task = #{task},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="lastEditTime != null">last_edit_time = #{lastEditTime},</if>
        </set>
        where id=#{id}
    </update>
    <select id="queryDBPlayerByAccount" resultMap="playerMap">
        select id,uid,account,password,user_name,head_icon,weath,task,create_time,last_edit_time
        from db_player
        where account=#{account}
    </select>
    <select id="queryDBPlayerById" resultMap="playerMap">
        select id,uid,account,password,user_name,head_icon,weath,task,create_time,last_edit_time
        from db_player
        where id=#{id}
    </select>
    <select id="queryDBPlayerByUid" resultMap="playerMap">
        select id,uid,account,password,user_name,head_icon,weath,task,create_time,last_edit_time
        from db_player
        where uid=#{uid}
    </select>
    <select id="queryDBPlayerList" resultMap="playerMap">
        select id,uid,account,password,user_name,head_icon,weath,task,create_time,last_edit_time
        from db_player
        where uid >= #{uid}
    </select>
    <delete id="deletDBPlayerByUid">
        delete from db_player where uid=#{uid}
    </delete>
</mapper>